name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build-windows-installer:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build (release)
        run: cargo build --release

      - name: Determine version
        id: version
        shell: pwsh
        run: |
          if ($env:GITHUB_REF -like 'refs/tags/v*') {
            $version = $env:GITHUB_REF.Substring(11)
          } else {
            $metadata = cargo metadata --format-version 1 --no-deps | ConvertFrom-Json
            $pkg = $metadata.packages | Where-Object { $_.name -eq 'stopbus-ui' } | Select-Object -First 1
            $version = $pkg.version
          }
          if (-not $version) { throw 'Unable to determine version.' }
          "version=$version" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8
          Write-Host "Using version $version"

      - name: Install Inno Setup
        run: choco install innosetup -y --no-progress

      - name: Locate Inno Setup
        id: inno
        shell: pwsh
        run: |
          $iscc = (Get-Command iscc.exe -ErrorAction SilentlyContinue).Path
          if (-not $iscc) {
            $candidate = Join-Path ${env:ProgramFiles(x86)} 'Inno Setup 6\\ISCC.exe'
            if (Test-Path $candidate) { $iscc = $candidate }
          }
          if (-not $iscc) { throw 'ISCC.exe not found after installation.' }
          "iscc=$iscc" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8

      - name: Build installer
        env:
          STOPBUS_APP_VERSION: ${{ steps.version.outputs.version }}
        shell: pwsh
        run: |
          Remove-Item -Recurse -Force target\\installer -ErrorAction SilentlyContinue
          & "${{ steps.inno.outputs.iscc }}" installers\\StopTheBus.iss

      - name: Locate installer
        id: locate
        shell: pwsh
        run: |
          $file = Get-ChildItem target\\installer -Filter "StopTheBus-*-Setup.exe" | Select-Object -First 1
          if (-not $file) { throw 'Installer not found.' }
          "path=$($file.FullName)" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: StopTheBus-setup
          path: ${{ steps.locate.outputs.path }}

      - name: Create GitHub release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.locate.outputs.path }}
